[DROOLS-664] Implement xpath notation in drools constraints <p>It is required to allow an xpath notation in drools constraints like the following:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Person( $pet : /pets ) 
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>that is formally equivalent to the more verbose:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Person( $pets : pets )</span></pre>
			</td>
		</tr>
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >$pet : Pet() from $pets
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>It should be also possible to have conditions filtering the collection like in:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Person( $pet : /pets[ age == 5 ] )
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>corresponding to:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Person( $pets : pets )</span></pre>
			</td>
		</tr>
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >$pet : Pet(age == 5) from $pets
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>Of course also multiple indirections has to be allowed, so the following:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Man( $toy : /wife/children/toys )
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>will be equivalent to:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >$man: Man( $wife: wife )</span></pre>
			</td>
		</tr>
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;   width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >$child: Child() from $wife.children</span></pre>
			</td>
		</tr>
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >$toy: Toy() from $child.toys
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>In this case the xpath notation will also allow to flatten the 2 from nodes in a single one that will internally flatten the collection of collections. Since it is necessary to distinguish the case when we want to iterate a collection from the case when we want to bind the collection as a whole it is possible to mix the collection iteration operator  /  and the simple dereferencing operator  .  as in:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Man( $toys : /wife/children.toys )
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>

<p>In this last case this pattern binds each List&lt;Toy&gt; for each child as a whole, so this is equivalent to:</p>

<p/>
<div id= syntaxplugin  class= syntaxplugin  style= border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em; >
<table cellspacing= 0  cellpadding= 0  border= 0  width= 100%  style= font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black; >
		<tbody >
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >$man: Man( $wife: wife )</span></pre>
			</td>
		</tr>
				<tr id= syntaxplugin_code_and_gutter >
						<td  style=  line-height: 1.4em !important; padding: 0em; vertical-align: top; >
					<pre style= font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0; ><span style= color: black; font-family:  Consolas ,  Bitstream Vera Sans Mono ,  Courier New , Courier, monospace !important; >Child( $toys: toys ) from $wife.children
</span></pre>
			</td>
		</tr>
			</tbody>
</table>
</div>
<p/>