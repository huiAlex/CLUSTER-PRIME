[MNG-407] Need a way to turn off transient fetching of libraries <p>We need a way to turn off transient retrieval of stuff in the ant tasks. If, for example, I ask for commons-logging-1.04, the runtime pulls down everything ever used in it <br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.pom<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 7K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.pom.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.pom<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.pom.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: junit/junit/3.7/junit-3.7.pom<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: junit/junit/3.7/junit-3.7.pom.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: log4j/log4j/1.2.6/log4j-1.2.6.pom<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: log4j/log4j/1.2.6/log4j-1.2.6.pom.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: logkit/logkit/1.0.1/logkit-1.0.1.pom<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: logkit/logkit/1.0.1/logkit-1.0.1.pom.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: logkit/logkit/1.0.1/logkit-1.0.1.jar<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 70K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: logkit/logkit/1.0.1/logkit-1.0.1.jar.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: log4j/log4j/1.2.6/log4j-1.2.6.jar<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 342K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: log4j/log4j/1.2.6/log4j-1.2.6.jar.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: junit/junit/3.7/junit-3.7.jar<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 114K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: junit/junit/3.7/junit-3.7.jar.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 62K<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Downloading: avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar.md5<br/>
<span class= error >&#91;artifact:dependencies&#93;</span> Transferring 0K</p>

<p>As a consequence, the classpath is then set up wrong. And if we copy the contents of that path (e.g. into the lib dir of a WAR, we end up with conflicting JAR files).</p>

<p>Another example, if if declare a dependency on jaxen-1.1beta6. That was built against dom4j-1-5.2. That doesnt have an entry in the maven2 repository, so the build fails. Yet all jaxen needs is a JAXP parser, for which xerces works perfectly well. </p>

<p>I ve looked at the scope attribute, and it seems that transience is certainly noted as a problem, but I m not sure that works. What I really need is a transient=on/off attribute, so I can run with transience off when I am being 100% explicit about all my dependencies.</p>