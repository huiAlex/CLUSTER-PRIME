[PIG-1793] Add macro expansion to Pig Latin <p>As production Pig scripts grow longer and longer, Pig Latin has a need to integrate standard programming techniques of separation and code sharing offered by functions and modules.  A proposal of adding macro expansion to Pig Latin is posted here: <a href= http://wiki.apache.org/pig/TuringCompletePig  class= external-link  rel= nofollow >http://wiki.apache.org/pig/TuringCompletePig</a></p>

<p>Below is a brief summary of the proposed syntax (and examples):</p>

<ul>
	<li>Macro Definition</li>
</ul>


<p>The existing DEFINE keyword will be expanded to allow definitions of Pig macros. </p>

<p><b>Syntax</b></p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
define &lt;name&gt; (&lt;params&gt;) returns &lt;aliases&gt; {
    &lt;Pig Latin fragment&gt;
};
</pre>
</div></div>

<p><b>Example</b></p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
define my_macro(A, sortkey) returns C {
    B = filter $A by my_filter(*);
    $C = order B by $sortkey;
}
</pre>
</div></div>

<ul>
	<li>Macro Expansion</li>
</ul>


<p><b>Syntax</b></p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
&lt;aliases&gt; = &lt;macro name&gt; (&lt;params&gt;);
</pre>
</div></div>

<p><b>Example:</b> Use above macro in a Pig script:</p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
X = load  foo  as (user, address, phone);
Y = my_macro(X, user);
store Y into  bar ;
</pre>
</div></div>

<p>This script is expanded into the following Pig Latin statements: </p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
X = load  foo  as (user, address, phone);
macro_my_macro_B_1 = filter X by my_filter(*);
Y = order macro_my_macro_B_1 by user;
store Y into  bar ;
</pre>
</div></div>

<p><b>Notes</b></p>

<p>1. Any alias in the macro which isn t visible from outside will be prefixed with macro name and suffixed with instance id to avoid namespace collision. <br/>
2. Macro expansion is not a complete replacement for function calls. Recursive expansions are not supported.  </p>

<ul>
	<li>Macro Import</li>
</ul>


<p>The new IMPORT keyword can be used to add macros defined in another Pig Latin file.</p>

<p><b>Syntax</b></p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
<span class= code-keyword >import</span> &lt;Pig Latin file name&gt;;
</pre>
</div></div>

<p><b>Example</b></p>

<div class= code panel  style= border-width: 1px; ><div class= codeContent panelContent >
<pre class= code-java >
<span class= code-keyword >import</span> my_macro.pig;
</pre>
</div></div>

<p><b>Note:</b> All macro names are in the global namespace. </p>