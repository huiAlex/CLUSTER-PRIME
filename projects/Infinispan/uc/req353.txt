[ISPN-907] SSL access to Hot Rod <p>Investigate and integrate Adrian s patch for Hot Rod server so that it can accessed via SSL.</p>

<p>Email from Adrian:</p>

<p> While I remember heres a patch to add ssl for infinispan clients.<br/>
I did it a couple of weeks ago, but I dont know when Ill have time<br/>
to finish it off/polish it. It was based on head a few weeks ago,<br/>
but I dont remember which version. <img class= emoticon  src= https://issues.jboss.org/images/icons/emoticons/sad.png  height= 16  width= 16  align= absmiddle  alt=   border= 0 /></p>

<p>The horrible part is the way I had to modify all the parameter lists.<br/>
It could really do with passing some config object instead.</p>

<p>I dont know how to make  git diff  include new uncommitted files so Ive attached them<br/>
seperately.</p>

<p>See the test for how to use it, but it is basically set the config properties<br/>
(with the relevant infinispan package prefixes)<br/>
use_ssl=true<br/>
key_store_file_name=jks file containing our key<br/>
key_store_password=secret<br/>
trust_store_file_name=jks file containing public keys we trust for authentication<br/>
trust_store_password=another-secret</p>

<p>Optionally you can get the server to authenticate the client as well</p>

<p>need_client_auth=true</p>

<p>which means the server will need a trust store.</p>

<p>I ve also left it so if you dont set the properties it will use the default implementations.<br/>
But this doesnt work out of the box unless you enable the  anon  alogorithms on<br/>
the server, they aren t enabled by default. Those dont authenticate, they just encrypt the traffic.</p>

<p>The main thing left to do would be change the test to get maven to generate the<br/>
key/trust store in a well defined place in  target .</p>

<p>Other comments:</p>

<ul>
	<li>The code on the serrver will also work for other protocols as well, e.g. memcached<br/>
if the client supports ssl</li>
</ul>


<ul>
	<li>The ssl context construction is pretty similar in the client/server<br/>
and could probably be shared if I knew where to put shared stuff in the codebase. <img class= emoticon  src= https://issues.jboss.org/images/icons/emoticons/smile.png  height= 16  width= 16  align= absmiddle  alt=   border= 0 /></li>
</ul>


<ul>
	<li>There is some commented out bits where I think the client/server should really<br/>
be adding socket timeouts. Otherwise network drops/splits could cause the connection<br/>
to hang forever. There should at least be a connection timeout on the socket construction, <br/>
if you dont want to implement a full blown ping to continually test the connection rather <br/>
than just ping on start - which doesnt run until after the connection timeout is needed.</li>
</ul>


<ul>
	<li>I had to modify the system property handling so you can have a default of  null .<br/>
I only did this for Strings, might not be relevant for others?</li>
</ul>


<ul>
	<li>Why doesnt the client side do system property replacement like the server?</li>
</ul>


<ul>
	<li>Theres a lot of places in the code doing</li>
</ul>


<p>InputStream is = openStream();<br/>
useIt(is);</p>

<p>but never close the stream. While this is probably ok in infinispans use cases<br/>
it is not good practice to leave files open for the gc to close - that could take a while<br/>
to happen and you are hogging system resources.</p>

<p>Either useIt() should close the stream or the code should be </p>

<p>InputStream is = openStream();<br/>
try </p>
{
   useIt(is);
}
<p>finally </p>
{
   is.close();
}

<p>Feel free to post whatever parts of this message you like in the infinispan forum. <img class= emoticon  src= https://issues.jboss.org/images/icons/emoticons/smile.png  height= 16  width= 16  align= absmiddle  alt=   border= 0 /> </p>