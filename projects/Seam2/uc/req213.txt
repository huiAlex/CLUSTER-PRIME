[JBSEAM-3422] Add basic method on Identity that checks for authenticated user <p>People often report the their authentication method is called more than once. While there are many different conditions that can lead to this problem, the most common is developers using #</p>
{identity.loggedIn} for conditional rendering in the UI.<br/>
<br/>
Contrary to popular understanding, the #{identity.loggedIn}
<p> (alternatively written as #</p>
{identity.isLoggedIn()}
<p>) is not a simple JavaBean-style accessor method. It will attempt to perform a login if the user is not currently authenticated, thus making this method unsuitable to be used in the UI for conditional rendering. While nothing troublesome happens on successful login, when the login fails, or a guest user is browsing a page that calls this method, Seam triggers the authentication method at these arbitrary points in time.</p>

<p>A very simple workaround is use either #</p>
{identity.isLoggedIn(false)}
<p> or to simply create a new method on the identity component that merely checks if the user principal is null or non-null.</p>

<p>public boolean isAuthenticated() {<br/>
    return getPrincipal() != null;<br/>
}</p>

<p>In the UI you can now use #</p>
{identity.authenticated}
<p>, which is now the preferred way to check if the user has a security principal.</p>

<p>Note: You only see the double message if you add a FacesMessage in the authenticate method. If you use Seam s built in authentication messages, you don t get the double message because the quietLogin() method (called by isLoggedIn()) skips adding the messages. You aren t privy to the information of whether the authentication method was called by quietLogin() for your own message registration purposes.</p>