[JBSEAM-395] Alternate  dispatcher  strategies [JBSEAM-1218] Make LocalDispatcher not dependent on javax.ejb.Timer  <p>Currently, dispatch of asynchronous calls and events is done via the timer service. There are really good reasons to support other dispatching strategies such as quartz, jBPM, etc. This can be done simply by supporting @Asynchronous(dispatcher= #</p>
{name}
<p> ).</p> <p>I m attempting to create a port of the @Asynchronous annotation for Spring. (<a href= https://issues.jboss.org/browse/JBSEAM-1217  title= Port @Asynchronous Interceptor to Spring  class= issue-link  data-issue-key= JBSEAM-1217 ><del>JBSEAM-1217</del></a>)  It would appear the correct way to do this would be to create a Spring Dispatcher component that would override the core Dispatcher component.  However, the LocalDispatcher Interface is dependent on javax.ejb.Timer  I can probably wrap my spring dispatch implementation into the javax.ejb.Timer but it would be nice if a seam version of javax.ejb.Timer were created so that the j2ee.jar would not be required for users who wish to use @Asynchronous under a web container.</p> 