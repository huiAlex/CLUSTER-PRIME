[DERBY-774] DRDAConnThread::doneData should use statically allocated SQLException objects <p>DRDAConnThread::doneData currently creates a new SQLException object that is passed to the writeSQLCAGRP() method. Profiling shows that the creation of these Exception objects takes a lot of CPU because the Throwable constructor will call fillInStackTrace(), which is expensive. This is unnecessary since the exception is not being thrown, and the stack trace is never used. </p>

<p>It would be sufficient to keep a static SQLException instance in DRDAConnThread that could be reused each time doneData() is called (this is also suggested by the following comment in the code: </p>

<p>// sqlstate 02000 for end of data.<br/>
// RESOLVE: Need statics for sqlcodes. </p>

<p>Assigning to Knut-Anders, since he has the patch ready <img class= emoticon  src= https://issues.apache.org/jira/images/icons/emoticons/help_16.gif  height= 16  width= 16  align= absmiddle  alt=   border= 0 /> in his sandbox.</p>