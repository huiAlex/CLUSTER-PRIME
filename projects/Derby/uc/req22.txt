[DERBY-481] implement SQL generated columns [DERBY-3570] Implement DETERMINISTIC keyword for procedures and functions [DERBY-3932] Add tests of generated columns when sql authorization is turned on  <p>Satheesh has pointed out that generated columns, a SQL 2003 feature, would satisfy the performance requirements of Expression Indexes (bug 455). Generated columns may not be as elegant as Expression Indexes, but they are easier to implement. We would allow the following new kind of column definition in CREATE TABLE and ALTER TABLE statements:</p>

<p>    columnName GENERATED ALWAYS AS ( expression )</p>

<p>If expression were an indexableExpression (as defined in bug 455), then we could create indexes on it. There is no work for the optimizer to do here. The Language merely has to compute the generated column at INSERT/UPDATE time.</p> <p>We will need DETERMINISTIC functions when we implement generated columns (<a href= https://issues.apache.org/jira/browse/DERBY-481  title= implement SQL generated columns  class= issue-link  data-issue-key= DERBY-481 ><del>DERBY-481</del></a>). The syntax and behavior of the DETERMINISTIC keyword are defined in the functional spec attached to <a href= https://issues.apache.org/jira/browse/DERBY-481  title= implement SQL generated columns  class= issue-link  data-issue-key= DERBY-481 ><del>DERBY-481</del></a>.</p> <p>Add tests of generated columns under sql authorization. For instance, we need to verify the current_role cannot appear in generation clauses.</p> 