[DERBY-4241] Improve transition from read-only to writable Clob representation <p>When a store stream Clob is going to be modified, it will be written out to the temporary area of Derby and represented as a TemporaryClob.<br/>
The transfer of the data is done in a sub-optimal manner for two reasons;<br/>
 o for transfer of the complete Clob, the copy method operates on the byte level and we re not able to save the character length.<br/>
 o for transfer of parts of the Clob (i.e. truncation), we have to first decode the UTF-8 encoding to find the byte count and then transfer the same bytes.</p>

<p>I intend to do the following two changes;<br/>
 1) Add a getCharLengthIfKnow-method to InternalClob.<br/>
 2) Add a UTF-8 aware copy method to LOBStreamControl.</p>

<p>When a complete Clob is to be copied, code like this will be executed;<br/>
  cachedCharLength = internalClob.getLengthIfKnown();<br/>
  if (cachedCharLength &gt; 0)<br/>
      // use existing byte-oriented copy method for best performance (copy until EOF)<br/>
  else<br/>
      cachedCharLength = control.copyUTF8Data()</p>

<p>When parts of a Clob is to be copied, we always use the UTF-8 aware copy method, but we also do a cheap range check.<br/>
  cachedCharLength = internalClob.getLengthIfKnown();<br/>
  if (cachedCharLength &gt; 0 &amp;&amp; requestedLength &gt; cachedCharLength)<br/>
      throw EOFException();<br/>
  if (cachedCharLength == requestedLength)<br/>
     // use existing byte-oriented copy method for best performance (copy until EOF)<br/>
  else<br/>
      cachedCharLength = control.copyUTF8Data(requestedLength);</p>

<p>Adding the UTF-8 aware copy method was started under <a href= https://issues.apache.org/jira/browse/DERBY-4023  title= Improve length caching in TemporaryClob  class= issue-link  data-issue-key= DERBY-4023 ><del>DERBY-4023</del></a>, including comments on the first revision of a patch.</p>