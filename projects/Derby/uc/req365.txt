[DERBY-3981] Improve distribution of hash codes in SQLBinary and SQLChar <p>SQLBinary.hashCode() and SQLChar.hashCode() use a very simple algorithm that just takes the sum of the values in the array. This gives a poor distribution of hash values because similar values will have a higher probability of mapping to the same hash code, and the higher bits won t be used unless the array is very long. We should change these methods so that they use an algorithm similar to the one used in java.lang.String.hashCode(), described here: &lt;URL:<a href= http://java.sun.com/javase/6/docs/api/java/lang/String.html#hashCode(  class= external-link  rel= nofollow >http://java.sun.com/javase/6/docs/api/java/lang/String.html#hashCode(</a>)&gt;. This may have a positive effect on the performance of hash scans as it will reduce the likelihood of collisions in the hash table.</p>