[DERBY-781] Materialize subqueries in select list where possible to avoid creating invariant resultsets many times. <p>Derby s handling of union subqueries in from list can be improved by materializing invariant resultsets once, rather than creating them many times.</p>

<p>For example:</p>

<p>create view V1 as select i, j from T1 union select i,j from T2;<br/>
create view V2 as select a,b from T3 union select a,b from T4;<br/>
insert into T1 values (1,1), (2,2), (3,3), (4,4), (5,5);</p>

<p>For a query like select * from V1, V2 where V1.j = V2.b and V1.i in (1,2,3,4,5), it is possible the resultset for V2 is created 5 times. (assuming V2 is choosen as the the inner table) This can be very costly if the underlying selects can take long time and also may perform union many times.</p>

<p>Enhance materialization logic in setOperatorNode.java. It currently returns FALSE always.</p>

<p>public boolean performMaterialization(JBitSet outerTables)<br/>
		throws StandardException<br/>
{<br/>
	// RESOLVE - just say no to materialization right now - should be a cost based decision<br/>
	return false;</p>

<p>	/* Actual materialization, if appropriate, will be placed by our parent PRN.</p>
<ul>
	<li>This is because PRN might have a join condition to apply.  (Materialization</li>
	<li>can only occur before that.<br/>
	 */<br/>
	//return true;<br/>
} </li>
</ul>
