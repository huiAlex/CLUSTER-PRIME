[DERBY-6885] Remove ReuseFactory <p>ReuseFactory used to help reduce object allocations when converting numbers/booleans from primitive types to object types. After <a href= https://issues.apache.org/jira/browse/DERBY-2383  title= ReuseFactory should use the constants in java.lang.Boolean  class= issue-link  data-issue-key= DERBY-2383 ><del>DERBY-2383</del></a> and <a href= https://issues.apache.org/jira/browse/DERBY-6230  title= Use the JVM&#39;s cache of Number instances in ReuseFactory  class= issue-link  data-issue-key= DERBY-6230 ><del>DERBY-6230</del></a>, the ReuseFactory methods are just wrappers around standard library methods such as Integer.valueOf() and Long.valueOf().</p>

<p>Callers could just as easily call the corresponding valueOf() method directly, or rely on auto-boxing. Both ways use the same cache as ReuseFactory currently does, so ReuseFactory has no purpose anymore.</p>

<p>One exception: ReuseFactory.getZeroLenByteArray() is still used and provides value, as it avoids the allocation cost when an empty byte array is needed. The ArrayUtil class is probably just as good a home for it, so I propose we move it there and remove the ReuseFactory class.</p>