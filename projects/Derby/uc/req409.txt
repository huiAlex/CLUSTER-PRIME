[DERBY-4512] Avoid unnecessary lookup in transaction table when adding transaction <p>TransactionTable.add() first checks if the Hashtable trans contains a transaction with the same id as the one being added. If it does, add() does nothing. If there is no such transaction, a new TransactionTableEntry is created and put into the Hashtable.</p>

<p>I believe that TransactionTable.add() is never called on a transaction that has already been added to the table. If this is the case, there s no point in checking the Hashtable first. Instead, we could just create a new TransactionTableEntry and add it unconditionally. This would reduce the number of (synchronized) Hashtable calls and could improve the performance in scenarios like the one described in <a href= https://issues.apache.org/jira/browse/DERBY-3092  title= Use java.util.concurrent in TransactionTable to improve scalability  class= issue-link  data-issue-key= DERBY-3092 ><del>DERBY-3092</del></a>.</p>